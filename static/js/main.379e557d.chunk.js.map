{"version":3,"sources":["component/PasswordСomplexity.js","component/InputTextField.js","validators/validatorsSignUp.js","style/useStyle.js","component/SignUp.js","validators/validatorsLogIn.js","component/LogIn.js","store/store.js","App.js","index.js"],"names":["PasswordСomplexity","strColor","strWidth","scoreСomplexityPassword","styleСomplexityPassword","backgroundColor","height","marginTop","width","transition","style","InputTextField","input","meta","props","hasError","touched","error","TextField","autoComplete","variant","fullWidth","required","helperText","validationLogin","values","errors","valueLogin","login","lengthValueLogin","length","objectValidationLogin","test","Object","entries","key","value","validationEmail","email","validationPassword","valuePassword","password","lengthValuePassword","objectValidationPassword","validationConfirmPassword","valueConfirmPassword","confirm_password","lengthValueConfirmPassword","objectValidationConfirmPassword","validate","useStyles","makeStyles","theme","paper","spacing","display","flexDirection","alignItems","form","buttonsLog","margin","buttonLogIn","buttonSignUp","submit","buttonPass","minWidth","padding","weak","textAlign","strong","complexityPassword","SignUpReduxForm","reduxForm","handleSubmit","React","typeFieldPassword","setTypeFieldPassword","visibilityPassword","setVisibilityPassword","visibilityСomplexityPassword","setVisibilityСomplexityPassword","setScoreСomplexityPassword","validationForLowerLetters","validationForUpperLetters","validationForSpecialCharacter","validationForNumber","classes","Container","component","maxWidth","CssBaseline","className","Typography","noValidate","onSubmit","Grid","container","item","xs","Field","placeholder","name","id","label","title","type","sm","onChange","e","arrayValuePassword","target","split","isValidForLowerLetters","some","i","isValidForUpperLetters","isValidForSpecialCharacter","isValidForNumber","filter","Boolean","Button","color","onClick","justify","Link","handleClickOpenLogIn","SignUp","formData","console","log","LogInReduxForm","handleClickOpenSignUp","LogIn","obj","isEmpty","reducers","combineReducers","formReducer","store","createStore","window","SignUnDialog","onClose","selectedValue","open","Dialog","aria-labelledby","LogInDialog","App","openSignUp","setOpenSignUp","openLogIn","setOpenLogIn","handleClose","rerender","ReactDOM","render","document","getElementById","subscribe"],"mappings":"6SAqCeA,EAnCY,SAAC,GAAiC,IACvDC,EACAC,EAEJ,OAJ0D,EAA9BC,8BAK1B,KAAK,EACHF,EAAW,MACXC,EAAW,MACX,MACF,KAAK,EACHD,EAAW,SACXC,EAAW,MACX,MACF,KAAK,EACHD,EAAW,SACXC,EAAW,MACX,MACF,KAAK,EACHD,EAAW,UACXC,EAAW,OAKf,IAAME,EAA0B,CAC9BC,gBAAiBJ,EACjBK,OAAQ,MACRC,UAAW,OACXC,MAAON,EACPO,WAAY,yBAGd,OAAO,qBAAKC,MAAON,EAAZ,gB,SChBQO,EAhBM,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAASC,EAAY,gCAC5CC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OACE,cAACC,EAAA,EAAD,uCACMN,GACAE,GAFN,IAGEK,aAAa,MACbC,QAAQ,WACRC,WAAS,EACTC,UAAQ,EACRL,QAASF,EACTQ,WAAYR,M,QCJdS,EAAkB,SAACC,EAAQC,GAC/B,IAAIC,EAAaF,EAAOG,MAExB,GAAKD,EAGE,CAWL,IAXM,IAAD,EACDE,EAAmBF,EAAWG,OAE5BC,GAAqB,mBACxBF,EAAmB,EAAI,wCADC,cAExBA,EAAmB,GAAK,uCAFA,eAGvB,cAAcG,KACdL,GACE,kFALqB,GAQ3B,MAA2BM,OAAOC,QAAQH,GAA1C,eAAkE,CAAC,IAAD,sBAAtDI,EAAsD,KAAjDC,EAAiD,KAChE,GAAY,SAARD,EACF,OAAQT,EAAOE,MAAQQ,EAG3B,OAAOV,EAjBP,OADAA,EAAOE,MAAQ,iBACRF,GAoBLW,EAAkB,SAACZ,EAAQC,GAW/B,OAVKD,EAAOa,MAIT,yJAAyJN,KACxJP,EAAOa,SAGTZ,EAAOY,MAAQ,yBAPfZ,EAAOY,MACL,yEAQGZ,GAEHa,EAAqB,SAACd,EAAQC,GAClC,IAAIc,EAAgBf,EAAOgB,SAE3B,GAAKD,EAGE,CAmBL,IAnBM,IAAD,EACDE,EAAsBF,EAAcV,OAClCa,GAAwB,mBAC3B,KAAKX,KAAKQ,GAAiB,mBADA,cAE3B,wBAAcR,KAAKQ,GAAiB,iDAFT,cAG3BE,EACD,EAAI,qDAJwB,eAK1B,cAAcV,KACdQ,GACE,sCAPwB,eAQ1B,cAAcR,KACdQ,GACE,uCAVwB,eAW1B,+BAA+BR,KAC/BQ,GACE,sFAbwB,eAc1B,cAAcR,KAAKQ,GAAiB,mCAdV,GAiB9B,MAA2BP,OAAOC,QAAQS,GAA1C,eAAqE,CAAC,IAAD,sBAAzDR,EAAyD,KAApDC,EAAoD,KACnE,GAAY,SAARD,EACF,OAAQT,EAAOe,SAAWL,EAG9B,OAAOV,EAzBP,OADAA,EAAOe,SAAW,yBACXf,GA4BLkB,EAA4B,SAACnB,EAAQC,GACzC,IAAIc,EAAgBf,EAAOgB,SACvBI,EAAuBpB,EAAOqB,iBAElC,GAAKD,EAGE,CASL,IATM,IAAD,EACDE,EAA6BF,EAAqBf,OAChDkB,GAA+B,mBAClCH,GACDA,IACEL,EAAgB,uCAHiB,cAIlCO,EAA6B,EAAI,uCAJC,GAOrC,MAA2Bd,OAAOC,QAChCc,GADF,eAEG,CAAC,IAAD,sBAFSb,EAET,KAFcC,EAEd,KACD,GAAY,SAARD,EACF,OAAQT,EAAOoB,iBAAmBV,EAGtC,OAAOV,EAjBP,OADAA,EAAOoB,iBAAmB,yBACnBpB,GAqBIuB,EA3GE,SAACxB,GAChB,IAAMC,EAAS,GAKf,OAJAF,EAAgBC,EAAQC,GACxBW,EAAgBZ,EAAQC,GACxBa,EAAmBd,EAAQC,GAC3BkB,EAA0BnB,EAAQC,GAC3BA,G,SC0CMwB,EA9CGC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACL9C,UAAW6C,EAAME,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,KAAM,CACJlD,MAAO,OACPD,UAAW6C,EAAME,QAAQ,IAE3BK,WAAY,CACVnD,MAAO,OACPD,UAAW6C,EAAME,QAAQ,IACzBM,OAAQ,UAEVC,YAAa,CACXrD,MAAO,QAGTsD,aAAc,CACZtD,MAAO,OACRD,UAAW6C,EAAME,QAAQ,IAE1BS,OAAQ,CACNH,OAAQR,EAAME,QAAQ,EAAG,EAAG,IAE9BU,WAAY,CACV1D,OAAQ,OACRsD,OAAQ,IACRK,SAAU,OACVC,QAAS,IACT1D,MAAO,QAET2D,KAAM,CACJC,UAAW,UAEbC,OAAQ,CACND,UAAW,UAEbE,mBAAoB,CAClBf,QAAS,YC+IPgB,EAAkBC,YAAU,CAChCd,KAAM,SACNT,YAFsBuB,EAzKL,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,aAAiB3D,EAAY,kCACC4D,WAAe,YADhB,mBAC1CC,EAD0C,KACvBC,EADuB,OAEGF,YAAe,GAFlB,mBAE1CG,EAF0C,KAEtBC,EAFsB,OAM7CJ,YAAe,GAN8B,mBAI/CK,EAJ+C,KAK/CC,EAL+C,OAOWN,WAAe,GAP1B,mBAO5CvE,EAP4C,KAOnB8E,EAPmB,KAS3CC,EAA4B,cAC5BC,EAA4B,cAC5BC,EAAgC,+BAChCC,EAAsB,cAuCtBC,EAAUpC,IAEhB,OACE,eAACqC,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACE,cAACC,EAAA,EAAD,IACA,sBAAKC,UAAWL,EAAQjC,MAAxB,UACE,cAACuC,EAAA,EAAD,CAAYJ,UAAU,KAAKpE,QAAQ,KAAnC,qBAGA,uBAAMuE,UAAWL,EAAQ5B,KAAMmC,YAAU,EAACC,SAAUrB,EAApD,UACE,eAACsB,EAAA,EAAD,CAAMC,WAAS,EAAC1C,QAAS,EAAzB,UACE,cAACyC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEC,YAAa,QACbC,KAAM,QACNC,GAAI,QACJC,MAAO,QACPf,UAAW7E,EACX6F,MAAM,uBAGV,cAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEC,YAAa,QACbC,KAAM,QACNC,GAAI,QACJC,MAAO,QACPf,UAAW7E,EACX8F,KAAM,QACND,MAAO,uBAIX,cAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIQ,GAAI,GAAvB,SACE,cAACP,EAAA,EAAD,CACEC,YAAa,WACbC,KAAM,WACNC,GAAI,WACJC,MAAO,WACPf,UAAW7E,EACX8F,KAAM9B,EACN6B,MAAO,0BACPG,SA/Ee,SAACC,GAC5B5B,GAAgC,GAChC,IAAI6B,EAAqBD,EAAEE,OAAO1E,MAAM2E,MAAM,IAE1CC,EAAyBH,EAAmBI,MAAK,SAACC,GACpD,OAAOhC,EAA0BlD,KAAKkF,MAEpCC,EAAyBN,EAAmBI,MAAK,SAACC,GACpD,OAAO/B,EAA0BnD,KAAKkF,MAEpCE,EAA6BP,EAAmBI,MAAK,SAACC,GACxD,OAAO9B,EAA8BpD,KAAKkF,MAExCG,EAAmBR,EAAmBI,MAAK,SAACC,GAC9C,OAAO7B,EAAoBrD,KAAKkF,MAGlCjC,EACE,CAAC+B,EAAwBG,EAAwBC,EAA4BC,GAAkBC,OAAOC,SAASzF,QAG1F,KAAnB8E,EAAEE,OAAO1E,QACX6C,EAA2B,GAC3BD,GAAgC,SA2D1B,cAACe,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGQ,GAAI,EAAtB,SACE,eAACc,EAAA,EAAD,CACEf,KAAK,SACLrF,QAAQ,YACRqG,MAAM,UACN9B,UAAWL,EAAQtB,WACnB0D,QA7Da,WACC,aAAtB/C,GACFC,EAAqB,QACrBE,GAAsB,KAEtBF,EAAqB,YACrBE,GAAsB,KAkDd,UAOGD,GAAsB,cAAC,IAAD,KACrBA,GAAsB,cAAC,IAAD,SAG3BE,GACC,eAACgB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIP,UAAWL,EAAQhB,mBAAtC,UACE,cAACyB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGP,UAAWL,EAAQnB,KAArC,kBAGA,cAAC4B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,EAAD,CACE/F,+BAAyBA,MAG7B,cAAC4F,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGP,UAAWL,EAAQjB,OAArC,uBAMJ,cAAC0B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEC,YAAa,mBACbC,KAAM,mBACNC,GAAI,mBACJC,MAAO,mBACPf,UAAW7E,EACX8F,KAAM9B,EACN6B,MAAO,0BAIb,cAACgB,EAAA,EAAD,CACEf,KAAK,SACLpF,WAAS,EACTD,QAAQ,YACRqG,MAAM,UACN9B,UAAWL,EAAQvB,OALrB,oBASA,cAACgC,EAAA,EAAD,CAAMC,WAAS,EAAC2B,QAAQ,WAAxB,SACE,cAAC5B,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC2B,EAAA,EAAD,CAAMF,QAAS5G,EAAMA,MAAM+G,qBAAsBzG,QAAQ,QAAzD,6DA2BC0G,EAhBA,SAAChH,GAId,OACE,mCACE,cAACyD,EAAD,CAAiBuB,SALJ,SAACiC,GAChBC,QAAQC,IAAIF,IAI2BjH,MAAOA,OC9K5CuB,EAAkB,SAACZ,EAAQC,GAW/B,OAVKD,EAAOa,MAIT,yJAAyJN,KACxJP,EAAOa,SAGTZ,EAAOY,MAAQ,yBAPfZ,EAAOY,MACL,oCAQGZ,GAEHa,EAAqB,SAACd,EAAQC,GAGlC,IAFoBD,EAAOgB,SAIzB,OADAf,EAAOe,SAAW,8BACXf,GAIIuB,EA7BE,SAACxB,GAChB,IAAMC,EAAS,GAGf,OAFAW,EAAgBZ,EAAQC,GACxBa,EAAmBd,EAAQC,GACpBA,GCmHHwG,EAAiB1D,YAAU,CAC/Bd,KAAM,SACNT,YAFqBuB,EAvGL,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,aAAiB3D,EAAY,kCACE4D,WAAe,YADjB,mBACzCC,EADyC,KACtBC,EADsB,OAEIF,YAAe,GAFnB,mBAEzCG,EAFyC,KAErBC,EAFqB,KAc1CQ,EAAUpC,IAEhB,OACE,eAACqC,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACE,cAACC,EAAA,EAAD,IACA,sBAAKC,UAAWL,EAAQjC,MAAxB,UACE,cAACuC,EAAA,EAAD,CAAYJ,UAAU,KAAKpE,QAAQ,KAAnC,oBAGA,uBAAMuE,UAAWL,EAAQ5B,KAAMmC,YAAU,EAACC,SAAUrB,EAApD,UACE,eAACsB,EAAA,EAAD,CAAMC,WAAS,EAAC1C,QAAS,EAAzB,UACE,cAACyC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEC,YAAa,QACbC,KAAM,QACNC,GAAI,QACJC,MAAO,QACPf,UAAW7E,EACX8F,KAAM,QACND,MAAO,uBAIX,cAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIQ,GAAI,GAAvB,SACE,cAACP,EAAA,EAAD,CACEC,YAAa,WACbC,KAAM,WACNC,GAAI,WACJC,MAAO,WACPf,UAAW7E,EACX8F,KAAM9B,EACN6B,MAAO,8BAGX,cAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGQ,GAAI,EAAtB,SACE,eAACc,EAAA,EAAD,CACEf,KAAK,SACLrF,QAAQ,YACRqG,MAAM,UACN9B,UAAWL,EAAQtB,WACnB0D,QAlDa,WACC,aAAtB/C,GACFC,EAAqB,QACrBE,GAAsB,KAEtBF,EAAqB,YACrBE,GAAsB,KAuCd,UAOGD,GAAsB,cAAC,IAAD,KACrBA,GAAsB,cAAC,IAAD,YAI9B,cAAC2C,EAAA,EAAD,CACEf,KAAK,SACLpF,WAAS,EACTD,QAAQ,YACRqG,MAAM,UACN9B,UAAWL,EAAQvB,OALrB,oBASA,cAACgC,EAAA,EAAD,CAAMC,WAAS,EAAC2B,QAAQ,WAAxB,SACE,cAAC5B,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC2B,EAAA,EAAD,CAAMF,QAAS5G,EAAMA,MAAMqH,sBAAuB/G,QAAQ,QAA1D,4DAoCCgH,EAzBD,SAACtH,GAab,OACE,mCACE,cAACoH,EAAD,CAAgBpC,SAdH,SAACiC,IAChB,SAAiBM,GACf,IAAK,IAAIlG,KAAOkG,EACd,OAAO,EAET,OAAO,GAELC,CAAQP,IACVC,QAAQC,IAAI,KAEdD,QAAQC,IAAIF,IAI0BjH,MAAOA,O,yBC/G7CyH,EAAWC,YAAgB,CAC3B9E,KAAM+E,MAGNC,EAAQC,YAAYJ,GAGxBK,OAAOF,MAAQA,EACAA,Q,SCyDf,SAASG,EAAa/H,GAAQ,IACpBgI,EAAiChI,EAAjCgI,QAASC,EAAwBjI,EAAxBiI,cAAeC,EAASlI,EAATkI,KAKhC,OACE,cAACC,EAAA,EAAD,CAAQH,QALU,WAClBA,EAAQC,IAIsBG,kBAAgB,gBAAgBF,KAAMA,EAApE,SACE,cAAC,EAAD,eAAYlI,MAKlB,SAASqI,EAAYrI,GAAQ,IACnBgI,EAAiChI,EAAjCgI,QAASC,EAAwBjI,EAAxBiI,cAAeC,EAASlI,EAATkI,KAKhC,OACE,cAACC,EAAA,EAAD,CAAQH,QALU,WAClBA,EAAQC,IAIsBG,kBAAgB,eAAeF,KAAMA,EAAnE,SACE,cAAC,EAAD,eAAWlI,MAKFsI,MAlFH,WAAO,IAAD,EACoB1E,YAAe,GADnC,mBACT2E,EADS,KACGC,EADH,OAEkB5E,YAAe,GAFjC,mBAET6E,EAFS,KAEEC,EAFF,KAIVrB,EAAwB,WAC5BqB,GAAa,GACbF,GAAc,IAEVzB,EAAuB,WAC3B2B,GAAa,GACbF,GAAc,IAGVG,EAAc,WAClBH,GAAc,GACdE,GAAa,IAGTlE,EAAUpC,IAChB,OACE,cAAC,IAAD,CAAUwF,MAAOA,EAAjB,SACE,eAACnD,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACE,eAACM,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGP,UAAWL,EAAQ3B,WAArC,UACE,cAAC6D,EAAA,EAAD,CACEf,KAAK,SACLrF,QAAQ,YACRuE,UAAWL,EAAQzB,YACnB6D,QAASG,EAJX,oBAQA,cAACL,EAAA,EAAD,CACEf,KAAK,SACLrF,QAAQ,YACRqG,MAAM,UACN9B,UAAWL,EAAQxB,aACnB4D,QAASS,EALX,wBAUF,cAACU,EAAD,CACEG,KAAMK,EACNP,QAASW,EACT5B,qBAAsBA,IAExB,cAACsB,EAAD,CACEH,KAAMO,EACNT,QAASW,EACTtB,sBAAuBA,UCvD7BuB,EAAW,WACbC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,UAGnDJ,IAEAhB,EAAMqB,WAAU,WACdL,S","file":"static/js/main.379e557d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst PasswordСomplexity = ({ scoreСomplexityPassword }) => {\r\n  let strColor;\r\n  let strWidth;\r\n\r\n  switch (scoreСomplexityPassword) {\r\n    case 1:\r\n      strColor = \"red\";\r\n      strWidth = \"25%\";\r\n      break;\r\n    case 2:\r\n      strColor = \"orange\";\r\n      strWidth = \"50%\";\r\n      break;\r\n    case 3:\r\n      strColor = \"yellow\";\r\n      strWidth = \"75%\";\r\n      break;\r\n    case 4:\r\n      strColor = \"#5cff47\";\r\n      strWidth = \"100%\";\r\n      break;\r\n    default:\r\n  }\r\n\r\n  const styleСomplexityPassword = {\r\n    backgroundColor: strColor,\r\n    height: \"5px\",\r\n    marginTop: \"10px\",\r\n    width: strWidth,\r\n    transition: \"all 300ms ease-in-out\",\r\n  };\r\n\r\n  return <div style={styleСomplexityPassword}> </div>;\r\n};\r\n\r\nexport default PasswordСomplexity;\r\n","import TextField from \"@material-ui/core/TextField\";\r\n\r\nconst InputTextField = ({ input, meta, ...props }) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n      <TextField\r\n        {...input}\r\n        {...props}\r\n        autoComplete=\"off\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        required\r\n        error={!!hasError}\r\n        helperText={hasError}\r\n      />\r\n    );\r\n  };\r\n  \r\n  export default InputTextField;","const validate = (values) => {\r\n  const errors = {};\r\n  validationLogin(values, errors);\r\n  validationEmail(values, errors);\r\n  validationPassword(values, errors);\r\n  validationConfirmPassword(values, errors);\r\n  return errors;\r\n};\r\n\r\nconst validationLogin = (values, errors) => {\r\n  let valueLogin = values.login;\r\n\r\n  if (!valueLogin) {\r\n    errors.login = \"create a login\";\r\n    return errors;\r\n  } else {\r\n    let lengthValueLogin = valueLogin.length;\r\n\r\n    const objectValidationLogin = {\r\n      [lengthValueLogin < 4]: \"login must be more than 4 characters\",\r\n      [lengthValueLogin > 15]: \"login must be 15 characters or less\",\r\n      [!/^[\\w]{0,}$/i.test(\r\n        valueLogin\r\n      )]: \"login should not contain spaces and other special characters. use: az, AZ, 0-9\",\r\n    };\r\n\r\n    for (const [key, value] of Object.entries(objectValidationLogin)) {\r\n      if (key === \"true\") {\r\n        return (errors.login = value);\r\n      }\r\n    }\r\n    return errors;\r\n  }\r\n};\r\nconst validationEmail = (values, errors) => {\r\n  if (!values.email) {\r\n    errors.email =\r\n      \"enter a valid email address to which a confirmation email will be sent\";\r\n  } else if (\r\n    !/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\r\n      values.email\r\n    )\r\n  ) {\r\n    errors.email = \"invalid email address\";\r\n  }\r\n  return errors;\r\n};\r\nconst validationPassword = (values, errors) => {\r\n  let valuePassword = values.password;\r\n\r\n  if (!valuePassword) {\r\n    errors.password = \"сreate a password\";\r\n    return errors;\r\n  } else {\r\n    let lengthValuePassword = valuePassword.length;\r\n    const objectValidationPassword = {\r\n      [/\\s/.test(valuePassword)]: \"don't use space\",\r\n      [/(?=.*[А-я])/.test(valuePassword)]: \"do not use letters ая, АЯ\",\r\n      [lengthValuePassword <\r\n      8]: \"password is short, minimum number of characters 8\",\r\n      [!/(?=.*[A-Z])/.test(\r\n        valuePassword\r\n      )]: \"at least one uppercase is required\",\r\n      [!/(?=.*[a-z])/.test(\r\n        valuePassword\r\n      )]: \"at least one lower case is required\",\r\n      [!/(?=.*[!@#$%^&*()_=+{}:<.>-])/.test(\r\n        valuePassword\r\n      )]: \"at least one special character is required ! @ # $ % ^ & * ( ) _ = + { } : < . > -\",\r\n      [!/(?=.*[0-9])/.test(valuePassword)]: \"at least one number is required\",\r\n    };\r\n\r\n    for (const [key, value] of Object.entries(objectValidationPassword)) {\r\n      if (key === \"true\") {\r\n        return (errors.password = value);\r\n      }\r\n    }\r\n    return errors;\r\n  }\r\n};\r\nconst validationConfirmPassword = (values, errors) => {\r\n  let valuePassword = values.password;\r\n  let valueConfirmPassword = values.confirm_password;\r\n\r\n  if (!valueConfirmPassword) {\r\n    errors.confirm_password = \"enter confirm password\";\r\n    return errors;\r\n  } else {\r\n    let lengthValueConfirmPassword = valueConfirmPassword.length;\r\n    const objectValidationConfirmPassword = {\r\n      [valueConfirmPassword &&\r\n      valueConfirmPassword !==\r\n        valuePassword]: \"password confirmation doesn't match\",\r\n      [lengthValueConfirmPassword < 1]: \"password confirmation doesn't match\",\r\n    };\r\n\r\n    for (const [key, value] of Object.entries(\r\n      objectValidationConfirmPassword\r\n    )) {\r\n      if (key === \"true\") {\r\n        return (errors.confirm_password = value);\r\n      }\r\n    }\r\n    return errors;\r\n  }\r\n};\r\n\r\nexport default validate;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  buttonsLog: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(10),\r\n    margin: \"0 auto\",\r\n  }, \r\n  buttonLogIn: {\r\n    width: \"100%\",\r\n   /*  marginRigth: theme.spacing(3), */\r\n  }, \r\n  buttonSignUp: {\r\n    width: \"100%\",\r\n   marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  buttonPass: {\r\n    height: \"56px\",\r\n    margin: \"0\",\r\n    minWidth: \"30px\",\r\n    padding: \"0\",\r\n    width: \"100%\",\r\n  },\r\n  weak: {\r\n    textAlign: \"center\",\r\n  },\r\n  strong: {\r\n    textAlign: \"center\",\r\n  },\r\n  complexityPassword: {\r\n    display: \"flex\",\r\n  },\r\n}));\r\n\r\n\r\nexport default useStyles;\r\n\r\n","import * as React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\n\r\nimport PasswordСomplexity from \"./PasswordСomplexity\";\r\nimport InputTextField from \"./InputTextField\";\r\nimport validate from \"../validators/validatorsSignUp\";\r\nimport useStyles from \"../style/useStyle\";\r\n\r\nconst SignUpForm = ({ handleSubmit, ...props }) => {\r\n  const [typeFieldPassword, setTypeFieldPassword] = React.useState(\"password\");\r\n  const [visibilityPassword, setVisibilityPassword] = React.useState(false);\r\n  const [\r\n    visibilityСomplexityPassword,\r\n    setVisibilityСomplexityPassword,\r\n  ] = React.useState(false);\r\n  let [scoreСomplexityPassword, setScoreСomplexityPassword] = React.useState(0);\r\n\r\n  const validationForLowerLetters = /(?=.*[a-z])/;\r\n  const validationForUpperLetters = /(?=.*[A-Z])/;\r\n  const validationForSpecialCharacter = /(?=.*[!@#$%^&*()_=+{}:<.>-])/;\r\n  const validationForNumber = /(?=.*[0-9])/;\r\n\r\n  const onPasswordСomplexity = (e) => {\r\n    setVisibilityСomplexityPassword(true);\r\n    let arrayValuePassword = e.target.value.split(\"\");\r\n\r\n    let isValidForLowerLetters = arrayValuePassword.some((i) => {\r\n      return validationForLowerLetters.test(i);\r\n    });\r\n    let isValidForUpperLetters = arrayValuePassword.some((i) => {\r\n      return validationForUpperLetters.test(i);\r\n    });\r\n    let isValidForSpecialCharacter = arrayValuePassword.some((i) => {\r\n      return validationForSpecialCharacter.test(i);\r\n    });\r\n    let isValidForNumber = arrayValuePassword.some((i) => {\r\n      return validationForNumber.test(i);\r\n    });\r\n\r\n    setScoreСomplexityPassword(\r\n      [isValidForLowerLetters, isValidForUpperLetters, isValidForSpecialCharacter, isValidForNumber].filter(Boolean).length\r\n    );\r\n\r\n    if (e.target.value === \"\") {\r\n      setScoreСomplexityPassword(0);\r\n      setVisibilityСomplexityPassword(false);\r\n    }\r\n  };\r\n\r\n  const VisibilityPassword = () => {\r\n    if (typeFieldPassword === \"password\") {\r\n      setTypeFieldPassword(\"text\");\r\n      setVisibilityPassword(true);\r\n    } else {\r\n      setTypeFieldPassword(\"password\");\r\n      setVisibilityPassword(false);\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12}>\r\n              <Field\r\n                placeholder={\"login\"}\r\n                name={\"login\"}\r\n                id={\"login\"}\r\n                label={\"login\"}\r\n                component={InputTextField}\r\n                title=\"enter your login\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Field\r\n                placeholder={\"email\"}\r\n                name={\"email\"}\r\n                id={\"email\"}\r\n                label={\"email\"}\r\n                component={InputTextField}\r\n                type={\"email\"}\r\n                title={\"enter your email\"}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={10} sm={10}>\r\n              <Field\r\n                placeholder={\"password\"}\r\n                name={\"password\"}\r\n                id={\"password\"}\r\n                label={\"password\"}\r\n                component={InputTextField}\r\n                type={typeFieldPassword}\r\n                title={\"enter a strong password\"}\r\n                onChange={onPasswordСomplexity}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={2} sm={2}>\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.buttonPass}\r\n                onClick={VisibilityPassword}\r\n              >\r\n                {visibilityPassword && <VisibilityIcon />}\r\n                {!visibilityPassword && <VisibilityOffIcon />}\r\n              </Button>\r\n            </Grid>\r\n            {visibilityСomplexityPassword && (\r\n              <Grid item xs={12} className={classes.complexityPassword}>\r\n                <Grid item xs={3} className={classes.weak}>\r\n                  weak\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <PasswordСomplexity\r\n                    scoreСomplexityPassword={scoreСomplexityPassword}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={3} className={classes.strong}>\r\n                  strong\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n\r\n            <Grid item xs={12}>\r\n              <Field\r\n                placeholder={\"confirm password\"}\r\n                name={\"confirm_password\"}\r\n                id={\"confirm_password\"}\r\n                label={\"confirm password\"}\r\n                component={InputTextField}\r\n                type={typeFieldPassword}\r\n                title={\"confirm password\"}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link onClick={props.props.handleClickOpenLogIn} variant=\"body2\">\r\n                Already have an account? Log in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst SignUp = (props) => {\r\n  const onSubmit = (formData) => {\r\n    console.log(formData);\r\n  };\r\n  return (\r\n    <>\r\n      <SignUpReduxForm onSubmit={onSubmit} props={props}/>\r\n    </>\r\n  );\r\n};\r\n\r\nconst SignUpReduxForm = reduxForm({\r\n  form: \"singUp\",\r\n  validate,\r\n})(SignUpForm);\r\n\r\nexport default SignUp;\r\n","const validate = (values) => {\r\n  const errors = {};\r\n  validationEmail(values, errors);\r\n  validationPassword(values, errors);\r\n  return errors;\r\n};\r\n\r\nconst validationEmail = (values, errors) => {\r\n  if (!values.email) {\r\n    errors.email =\r\n      \"enter ayour account email address\";\r\n  } else if (\r\n    !/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\r\n      values.email\r\n    )\r\n  ) {\r\n    errors.email = \"invalid email address\";\r\n  }\r\n  return errors;\r\n};\r\nconst validationPassword = (values, errors) => {\r\n  let valuePassword = values.password;\r\n\r\n  if (!valuePassword) {\r\n    errors.password = \"enter your account password\";\r\n    return errors;\r\n  } \r\n};\r\n\r\nexport default validate;\r\n","import * as React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\n\r\nimport InputTextField from \"./InputTextField\";\r\nimport validate from \"../validators/validatorsLogIn\";\r\nimport useStyles from \"../style/useStyle\";\r\n\r\nconst LogInForm = ({ handleSubmit, ...props }) => {\r\n  const [typeFieldPassword, setTypeFieldPassword] = React.useState(\"password\");\r\n  const [visibilityPassword, setVisibilityPassword] = React.useState(false);\r\n\r\n  const VisibilityPassword = () => {\r\n    if (typeFieldPassword === \"password\") {\r\n      setTypeFieldPassword(\"text\");\r\n      setVisibilityPassword(true);\r\n    } else {\r\n      setTypeFieldPassword(\"password\");\r\n      setVisibilityPassword(false);\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Log in\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12}>\r\n              <Field\r\n                placeholder={\"email\"}\r\n                name={\"email\"}\r\n                id={\"email\"}\r\n                label={\"email\"}\r\n                component={InputTextField}\r\n                type={\"email\"}\r\n                title={\"enter your email\"}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={10} sm={10}>\r\n              <Field\r\n                placeholder={\"password\"}\r\n                name={\"password\"}\r\n                id={\"password\"}\r\n                label={\"password\"}\r\n                component={InputTextField}\r\n                type={typeFieldPassword}\r\n                title={\"enter a strong password\"}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={2} sm={2}>\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.buttonPass}\r\n                onClick={VisibilityPassword}\r\n              >\r\n                {visibilityPassword && <VisibilityIcon />}\r\n                {!visibilityPassword && <VisibilityOffIcon />}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link onClick={props.props.handleClickOpenSignUp} variant=\"body2\">\r\n                Don't have an account? Sign up\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst LogIn = (props) => {\r\n  const onSubmit = (formData) => {\r\n    function isEmpty(obj) {\r\n      for (let key in obj) {\r\n        return false;\r\n      }\r\n      return true;\r\n    } \r\n    if (isEmpty(formData)) {\r\n      console.log(\"f\")\r\n    }\r\n    console.log(formData) ;\r\n  };\r\n  return (\r\n    <>\r\n      <LogInReduxForm onSubmit={onSubmit} props={props} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst LogInReduxForm = reduxForm({\r\n  form: \"singIp\",\r\n  validate\r\n})(LogInForm);\r\n\r\nexport default LogIn;\r\n","import {combineReducers, createStore } from \"redux\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\n\r\nlet reducers = combineReducers({\r\n    form: formReducer,\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\n\r\nwindow.store = store;\r\nexport default store;\r\n","import * as React from \"react\";\r\nimport SignUp from \"./component/SignUp\";\r\nimport LogIn from \"./component/LogIn\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/store\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport useStyles from \"./style/useStyle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst App = () => {\r\n  const [openSignUp, setOpenSignUp] = React.useState(false);\r\n  const [openLogIn, setOpenLogIn] = React.useState(false);\r\n\r\n  const handleClickOpenSignUp = () => {\r\n    setOpenLogIn(false);\r\n    setOpenSignUp(true);\r\n  };\r\n  const handleClickOpenLogIn = () => {\r\n    setOpenLogIn(true);\r\n    setOpenSignUp(false);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpenSignUp(false);\r\n    setOpenLogIn(false);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Provider store={store}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <Grid item xs={6} className={classes.buttonsLog}>\r\n          <Button\r\n            type=\"button\"\r\n            variant=\"contained\"\r\n            className={classes.buttonLogIn}\r\n            onClick={handleClickOpenLogIn}\r\n          >\r\n            Log in\r\n          </Button>\r\n          <Button\r\n            type=\"button\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.buttonSignUp}\r\n            onClick={handleClickOpenSignUp}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n        </Grid>\r\n        <SignUnDialog\r\n          open={openSignUp}\r\n          onClose={handleClose}\r\n          handleClickOpenLogIn={handleClickOpenLogIn}\r\n        />\r\n        <LogInDialog\r\n          open={openLogIn}\r\n          onClose={handleClose}\r\n          handleClickOpenSignUp={handleClickOpenSignUp}\r\n        />\r\n      </Container>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nfunction SignUnDialog(props) {\r\n  const { onClose, selectedValue, open } = props;\r\n  const handleClose = () => {\r\n    onClose(selectedValue);\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"dialog_signUp\" open={open}>\r\n      <SignUp {...props} />\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nfunction LogInDialog(props) {\r\n  const { onClose, selectedValue, open } = props;\r\n  const handleClose = () => {\r\n    onClose(selectedValue);\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"dialog_logIn\" open={open}>\r\n      <LogIn {...props} />\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./store/store\";\r\n\r\nlet rerender = () => {\r\n  ReactDOM.render(<App />, document.getElementById(\"root\"));\r\n};\r\n\r\nrerender();\r\n\r\nstore.subscribe(() => {\r\n  rerender();\r\n});"],"sourceRoot":""}