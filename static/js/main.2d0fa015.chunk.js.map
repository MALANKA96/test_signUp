{"version":3,"sources":["component/PasswordСomplexity.js","component/InputTextField.js","validators/validatorsSignUp.js","style/useStyle.js","component/SignUp.js","component/CheckboxField.js","validators/validatorsLogIn.js","component/LogIn.js","store/store.js","App.js","index.js"],"names":["PasswordСomplexity","strColor","strWidth","scoreСomplexityPassword","styleСomplexityPassword","backgroundColor","height","marginTop","width","transition","style","InputTextField","input","meta","props","hasError","touched","error","TextField","autoComplete","variant","fullWidth","required","helperText","validationLogin","values","errors","valueLogin","login","lengthValueLogin","length","objectValidationLogin","test","Object","entries","key","value","validationEmail","email","validationPassword","valuePassword","password","lengthValuePassword","objectValidationPassword","validationConfirmPassword","valueConfirmPassword","confirm_password","lengthValueConfirmPassword","objectValidationConfirmPassword","validate","useStyles","makeStyles","theme","main","display","margin","maxWidth","paper","spacing","flexDirection","alignItems","form","buttonsLog","buttonNigthTheme","buttonLogIn","buttonSignUp","submit","buttonPass","minWidth","padding","weak","textAlign","strong","complexityPassword","SignUpReduxForm","reduxForm","handleSubmit","React","typeFieldPassword","setTypeFieldPassword","visibilityPassword","setVisibilityPassword","visibilityСomplexityPassword","setVisibilityСomplexityPassword","setScoreСomplexityPassword","validationForLowerLetters","validationForUpperLetters","validationForSpecialCharacter","validationForNumber","classes","Container","component","CssBaseline","className","Typography","noValidate","onSubmit","Grid","container","item","xs","Field","placeholder","name","id","label","title","type","sm","onChange","e","arrayValuePassword","target","split","isValidForLowerLetters","some","i","isValidForUpperLetters","isValidForSpecialCharacter","isValidForNumber","filter","Boolean","Button","color","onClick","justify","Link","handleClickOpenLogIn","SignUp","formData","console","log","CheckboxField","FormControlLabel","control","Checkbox","LogInReduxForm","handleClickOpenSignUp","LogIn","reducers","combineReducers","formReducer","store","createStore","window","SignUpDialog","onClose","selectedValue","open","Dialog","aria-labelledby","LogInDialog","App","openSignUp","setOpenSignUp","openLogIn","setOpenLogIn","nightTheme","setNightTheme","handleClose","myThemeNigth","createMuiTheme","palette","primary","green","myThemeLigth","indigo","ThemeProvider","Paper","rerender","ReactDOM","render","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.2d0fa015.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst PasswordСomplexity = ({ scoreСomplexityPassword }) => {\r\n  //component that returns the password complexity slider\r\n  let strColor; \r\n  let strWidth;\r\n\r\n  switch (scoreСomplexityPassword) {\r\n    case 1: // level complexity 1\r\n      strColor = \"red\";\r\n      strWidth = \"25%\";\r\n      break; \r\n    case 2: // level complexity 2\r\n      strColor = \"orange\";\r\n      strWidth = \"50%\";\r\n      break;\r\n    case 3: // level complexity 3\r\n      strColor = \"yellow\";\r\n      strWidth = \"75%\";\r\n      break;\r\n    case 4: // level complexity 4\r\n      strColor = \"#5cff47\";\r\n      strWidth = \"100%\";\r\n      break;\r\n    default:\r\n  }\r\n\r\n  const styleСomplexityPassword = {\r\n    backgroundColor: strColor,\r\n    height: \"5px\",\r\n    marginTop: \"10px\",\r\n    width: strWidth,\r\n    transition: \"all 300ms ease-in-out\",\r\n  }; \r\n\r\n  return <div style={styleСomplexityPassword}> </div>;\r\n};\r\n\r\nexport default PasswordСomplexity;\r\n","import {TextField} from \"@material-ui/core\";\r\n\r\nconst InputTextField = ({ input, meta, ...props }) => {\r\n  //a component that returns an input field\r\n  const hasError = meta.touched && meta.error;\r\n  return (\r\n    <TextField\r\n      {...input}\r\n      {...props}\r\n      autoComplete=\"off\"\r\n      variant=\"outlined\"\r\n      fullWidth\r\n      required\r\n      error={!!hasError}\r\n      helperText={hasError}\r\n    />\r\n  );\r\n};\r\n\r\nexport default InputTextField;\r\n","const validate = (values) => {\r\n  const errors = {};\r\n  validationLogin(values, errors);\r\n  validationEmail(values, errors);\r\n  validationPassword(values, errors);\r\n  validationConfirmPassword(values, errors);\r\n  return errors;\r\n};\r\n\r\nconst validationLogin = (values, errors) => {\r\n  let valueLogin = values.login;\r\n\r\n  if (!valueLogin) {\r\n    errors.login = \"create a login\";\r\n    return errors;\r\n  } else {\r\n    let lengthValueLogin = valueLogin.length;\r\n\r\n    const objectValidationLogin = {\r\n      [lengthValueLogin < 4]: \"login must be more than 4 characters\",\r\n      [lengthValueLogin > 15]: \"login must be 15 characters or less\",\r\n      [!/^[\\w]{0,}$/i.test(\r\n        valueLogin\r\n      )]: \"login should not contain spaces and other special characters. use: az, AZ, 0-9\",\r\n    };\r\n\r\n    for (const [key, value] of Object.entries(objectValidationLogin)) {\r\n      if (key === \"true\") {\r\n        return (errors.login = value);\r\n      }\r\n    }\r\n    return errors;\r\n  }\r\n};\r\nconst validationEmail = (values, errors) => {\r\n  if (!values.email) {\r\n    errors.email =\r\n      \"enter a valid email address to which a confirmation email will be sent\";\r\n  } else if (\r\n    !/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\r\n      values.email\r\n    )\r\n  ) {\r\n    errors.email = \"invalid email address\";\r\n  }\r\n  return errors;\r\n};\r\nconst validationPassword = (values, errors) => {\r\n  let valuePassword = values.password;\r\n\r\n  if (!valuePassword) {\r\n    errors.password = \"сreate a password\";\r\n    return errors;\r\n  } else {\r\n    let lengthValuePassword = valuePassword.length;\r\n    const objectValidationPassword = {\r\n      [/\\s/.test(valuePassword)]: \"don't use space\",\r\n      [/(?=.*[А-я])/.test(valuePassword)]: \"do not use letters ая, АЯ\",\r\n      [lengthValuePassword <\r\n      8]: \"password is short, minimum number of characters 8\",\r\n      [!/(?=.*[A-Z])/.test(\r\n        valuePassword\r\n      )]: \"at least one uppercase is required\",\r\n      [!/(?=.*[a-z])/.test(\r\n        valuePassword\r\n      )]: \"at least one lower case is required\",\r\n      [!/(?=.*[!@#$%^&*()_=+{}:<.>-])/.test(\r\n        valuePassword\r\n      )]: \"at least one special character is required ! @ # $ % ^ & * ( ) _ = + { } : < . > -\",\r\n      [!/(?=.*[0-9])/.test(valuePassword)]: \"at least one number is required\",\r\n    };\r\n\r\n    for (const [key, value] of Object.entries(objectValidationPassword)) {\r\n      if (key === \"true\") {\r\n        return (errors.password = value);\r\n      }\r\n    }\r\n    return errors;\r\n  }\r\n};\r\nconst validationConfirmPassword = (values, errors) => {\r\n  let valuePassword = values.password;\r\n  let valueConfirmPassword = values.confirm_password;\r\n\r\n  if (!valueConfirmPassword) {\r\n    errors.confirm_password = \"enter confirm password\";\r\n    return errors;\r\n  } else {\r\n    let lengthValueConfirmPassword = valueConfirmPassword.length;\r\n    const objectValidationConfirmPassword = {\r\n      [valueConfirmPassword &&\r\n      valueConfirmPassword !==\r\n        valuePassword]: \"password confirmation doesn't match\",\r\n      [lengthValueConfirmPassword < 1]: \"password confirmation doesn't match\",\r\n    };\r\n\r\n    for (const [key, value] of Object.entries(\r\n      objectValidationConfirmPassword\r\n    )) {\r\n      if (key === \"true\") {\r\n        return (errors.confirm_password = value);\r\n      }\r\n    }\r\n    return errors;\r\n  }\r\n};\r\n\r\nexport default validate;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  main: {\r\n    display: \"flex\",\r\n    /* backgroundColor: ( \"yellowgreen\" ), */\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    margin: \"0\",\r\n    maxWidth: \"100vw\"\r\n\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  buttonsLog: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(10),\r\n    margin: \"0 auto\",\r\n  },\r\n  buttonNigthTheme: {\r\n    marginTop: theme.spacing(10),\r\n  },\r\n  buttonLogIn: {\r\n    marginTop: theme.spacing(3),\r\n    width: \"100%\",\r\n  },\r\n  buttonSignUp: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  buttonPass: {\r\n    height: \"56px\",\r\n    margin: \"0\",\r\n    minWidth: \"30px\",\r\n    padding: \"0\",\r\n    width: \"100%\",\r\n  },\r\n  weak: {\r\n    textAlign: \"center\",\r\n  },\r\n  strong: {\r\n    textAlign: \"center\",\r\n  },\r\n  complexityPassword: {\r\n    display: \"flex\",\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import * as React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\n\r\nimport PasswordСomplexity from \"./PasswordСomplexity\";\r\nimport InputTextField from \"./InputTextField\";\r\nimport validate from \"../validators/validatorsSignUp\";\r\nimport useStyles from \"../style/useStyle\";\r\n\r\nconst SignUpForm = ({ handleSubmit, ...props }) => {\r\n  const [typeFieldPassword, setTypeFieldPassword] = React.useState(\"password\");\r\n  // hook state type setting for password\r\n  const [visibilityPassword, setVisibilityPassword] = React.useState(false);\r\n  //hook state setting eye visibility for password\r\n  const [\r\n    visibilityСomplexityPassword,\r\n    setVisibilityСomplexityPassword,\r\n  ] = React.useState(false);\r\n  //hook visibility slider for password сomplexity\r\n  let [scoreСomplexityPassword, setScoreСomplexityPassword] = React.useState(0);\r\n  //hook state to change points(score) for password complexity\r\n\r\n  const validationForLowerLetters = /(?=.*[a-z])/;\r\n  const validationForUpperLetters = /(?=.*[A-Z])/;\r\n  const validationForSpecialCharacter = /(?=.*[!@#$%^&*()_=+{}:<.>-])/;\r\n  const validationForNumber = /(?=.*[0-9])/;\r\n\r\n  const onPasswordСomplexity = (e) => {\r\n    //examining the password complexity state\r\n    setVisibilityСomplexityPassword(true);\r\n    let arrayValuePassword = e.target.value.split(\"\");\r\n    //entering the password value into an array for verification\r\n    let isValidForLowerLetters = arrayValuePassword.some((i) => {\r\n      return validationForLowerLetters.test(i);\r\n    });\r\n    let isValidForUpperLetters = arrayValuePassword.some((i) => {\r\n      return validationForUpperLetters.test(i);\r\n    });\r\n    let isValidForSpecialCharacter = arrayValuePassword.some((i) => {\r\n      return validationForSpecialCharacter.test(i);\r\n    });\r\n    let isValidForNumber = arrayValuePassword.some((i) => {\r\n      return validationForNumber.test(i);\r\n    });\r\n\r\n    setScoreСomplexityPassword(\r\n      [\r\n        isValidForLowerLetters,\r\n        isValidForUpperLetters,\r\n        isValidForSpecialCharacter,\r\n        isValidForNumber,\r\n      ].filter(Boolean).length\r\n    ); // password complexity estimation based on validation\r\n\r\n    if (e.target.value === \"\") {\r\n      setScoreСomplexityPassword(0);\r\n      setVisibilityСomplexityPassword(false);\r\n    }\r\n  };\r\n\r\n  const VisibilityPassword = () => {\r\n    if (typeFieldPassword === \"password\") {\r\n      setTypeFieldPassword(\"text\");\r\n      setVisibilityPassword(true);\r\n    } else {\r\n      setTypeFieldPassword(\"password\");\r\n      setVisibilityPassword(false);\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n  // hook accepting properties to be used for \"interpolation\" in the stylesheet.\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12}>\r\n              <Field\r\n                placeholder={\"login\"}\r\n                name={\"login\"}\r\n                id={\"login\"}\r\n                label={\"login\"}\r\n                component={InputTextField}\r\n                title=\"enter your login\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Field\r\n                placeholder={\"email\"}\r\n                name={\"email\"}\r\n                id={\"email\"}\r\n                label={\"email\"}\r\n                component={InputTextField}\r\n                type={\"email\"}\r\n                title={\"enter your email\"}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={10} sm={10}>\r\n              <Field\r\n                placeholder={\"password\"}\r\n                name={\"password\"}\r\n                id={\"password\"}\r\n                label={\"password\"}\r\n                component={InputTextField}\r\n                type={typeFieldPassword}\r\n                title={\"enter a strong password\"}\r\n                onChange={onPasswordСomplexity}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={2} sm={2}>\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.buttonPass}\r\n                onClick={VisibilityPassword}\r\n              >\r\n                {visibilityPassword && <VisibilityIcon />}\r\n                {!visibilityPassword && <VisibilityOffIcon />}\r\n              </Button>\r\n            </Grid>\r\n            {visibilityСomplexityPassword && (\r\n              <Grid item xs={12} className={classes.complexityPassword}>\r\n                <Grid item xs={3} className={classes.weak}>\r\n                  weak\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <PasswordСomplexity\r\n                    scoreСomplexityPassword={scoreСomplexityPassword}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={3} className={classes.strong}>\r\n                  strong\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n\r\n            <Grid item xs={12}>\r\n              <Field\r\n                placeholder={\"confirm password\"}\r\n                name={\"confirm_password\"}\r\n                id={\"confirm_password\"}\r\n                label={\"confirm password\"}\r\n                component={InputTextField}\r\n                type={typeFieldPassword}\r\n                title={\"confirm password\"}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link onClick={props.props.handleClickOpenLogIn} variant=\"body2\">\r\n                Already have an account? Log in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}; // Form for login\r\n\r\nconst SignUp = (props) => {\r\n  const onSubmit = (formData) => {\r\n    console.log(formData);\r\n  }; // Function that outputs data from the form to the console\r\n  return (\r\n    <>\r\n      <SignUpReduxForm onSubmit={onSubmit} props={props} />\r\n    </>\r\n  );\r\n}; //The main component of LogIn which returns SignUpReduxForm\r\n\r\nconst SignUpReduxForm = reduxForm({\r\n  form: \"singUp\", // a unique name for the form\r\n  validate, //  validation function given to redux-form\r\n})(SignUpForm); //HOC\r\n//function that takes configuration object and returns a new function;\r\n\r\nexport default SignUp;\r\n","import { Checkbox, FormControlLabel } from \"@material-ui/core\";\r\n\r\nconst CheckboxField = ({ input, ...props }) => {\r\n  //component returning checkbox\r\n  return (\r\n    <FormControlLabel {...props} control={<Checkbox {...input} {...props} />} />\r\n  );\r\n};\r\n\r\nexport default CheckboxField;\r\n","const validate = (values) => {\r\n  const errors = {};\r\n  validationEmail(values, errors);\r\n  validationPassword(values, errors);\r\n  return errors;\r\n};\r\n\r\nconst validationEmail = (values, errors) => {\r\n  if (!values.email) {\r\n    errors.email =\r\n      \"enter your account email address\";\r\n  } else if (\r\n    !/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\r\n      values.email\r\n    )\r\n  ) {\r\n    errors.email = \"invalid email address\";\r\n  }\r\n  return errors;\r\n};\r\nconst validationPassword = (values, errors) => {\r\n  let valuePassword = values.password;\r\n\r\n  if (!valuePassword) {\r\n    errors.password = \"enter your account password\";\r\n    return errors;\r\n  } \r\n};\r\n\r\nexport default validate;\r\n","import * as React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\n\r\nimport InputTextField from \"./InputTextField\";\r\nimport CheckboxField from \"./CheckboxField\";\r\n\r\nimport validate from \"../validators/validatorsLogIn\";\r\nimport useStyles from \"../style/useStyle\";\r\n\r\nconst LogInForm = ({ handleSubmit, ...props }) => {\r\n  const [typeFieldPassword, setTypeFieldPassword] = React.useState(\"password\");\r\n  // hook state type setting for password\r\n  const [visibilityPassword, setVisibilityPassword] = React.useState(false);\r\n  //hook state setting eye visibility for password\r\n\r\n  const VisibilityPassword = () => {\r\n    if (typeFieldPassword === \"password\") {\r\n      setTypeFieldPassword(\"text\");\r\n      setVisibilityPassword(true);\r\n    } else {\r\n      setTypeFieldPassword(\"password\");\r\n      setVisibilityPassword(false);\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n  // hook accepting properties to be used for \"interpolation\" in the stylesheet\r\n  return (\r\n    <Container component=\"main\"  maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Log in\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12}>\r\n              <Field\r\n                placeholder={\"email\"}\r\n                name={\"email\"}\r\n                id={\"email\"}\r\n                label={\"email\"}\r\n                component={InputTextField}\r\n                type={\"email\"}\r\n                title={\"enter your email\"}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={10} sm={10}>\r\n              <Field\r\n                placeholder={\"password\"}\r\n                name={\"password\"}\r\n                id={\"password\"}\r\n                label={\"password\"}\r\n                component={InputTextField}\r\n                type={typeFieldPassword}\r\n                title={\"enter a strong password\"}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={2} sm={2}>\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.buttonPass}\r\n                onClick={VisibilityPassword}\r\n              >\r\n                {visibilityPassword && <VisibilityIcon />}\r\n                {!visibilityPassword && <VisibilityOffIcon />}\r\n              </Button>\r\n            </Grid>\r\n            <Field\r\n              color=\"primary\"\r\n              name={\"remember_me\"}\r\n              id={\"remember_me\"}\r\n              label={\"Remember me\"}\r\n              component={CheckboxField}\r\n              type={\"checkbox\"}\r\n            />\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link onClick={props.props.handleClickOpenSignUp} variant=\"body2\">\r\n                Don't have an account? Sign up\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}; // Form for login\r\n\r\nconst LogIn = (props) => {\r\n  const onSubmit = (formData) => {\r\n    console.log(formData);\r\n  }; // Function that outputs data from the form to the console\r\n  return (\r\n    <>\r\n      <LogInReduxForm onSubmit={onSubmit} props={props} />\r\n    </>\r\n  );\r\n}; //The main component of LogIn which returns LogInReduxForm\r\n\r\nconst LogInReduxForm = reduxForm({\r\n  form: \"logIn\", // a unique name for the form\r\n  validate, //  validation function given to redux-form\r\n})(LogInForm); //HOC\r\n//function that takes configuration object and returns a new function;\r\n\r\nexport default LogIn;\r\n","import {combineReducers, createStore } from \"redux\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\n\r\nlet reducers = combineReducers({\r\n    form: formReducer,\r\n}); \r\n\r\nlet store = createStore(reducers);\r\n\r\n\r\nwindow.store = store;\r\nexport default store;\r\n","import * as React from \"react\";\r\nimport SignUp from \"./component/SignUp\";\r\nimport LogIn from \"./component/LogIn\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/store\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport useStyles from \"./style/useStyle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\r\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\r\nimport { createMuiTheme, Paper, ThemeProvider } from \"@material-ui/core\";\r\nimport { green, indigo } from \"@material-ui/core/colors\";\r\n\r\nconst App = () => {\r\n  const [openSignUp, setOpenSignUp] = React.useState(false);\r\n  //hook state opening Dialog Sign up\r\n  const [openLogIn, setOpenLogIn] = React.useState(false);\r\n  //hook state opening Dialog Log in\r\n  const [nightTheme, setNightTheme] = React.useState(true);\r\n  //hook state night mode\r\n  const handleClickOpenSignUp = () => {\r\n    setOpenLogIn(false);\r\n    setOpenSignUp(true);\r\n  };\r\n  const handleClickOpenLogIn = () => {\r\n    setOpenLogIn(true);\r\n    setOpenSignUp(false);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpenSignUp(false);\r\n    setOpenLogIn(false);\r\n  };\r\n\r\n  const handleNightTheme = () => {\r\n    if (nightTheme === false) {\r\n      setNightTheme(true);\r\n    } else {\r\n      setNightTheme(false);\r\n    }\r\n  };\r\n\r\n  const myThemeNigth = createMuiTheme({\r\n    palette: {\r\n      type: \"dark\",\r\n      primary: green,\r\n    },\r\n  });\r\n  const myThemeLigth = createMuiTheme({\r\n    palette: {\r\n      primary: indigo,\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n  // hook accepting properties to be used for \"interpolation\" in the stylesheet.\r\n  return (\r\n    <Provider store={store}>\r\n      <ThemeProvider theme={nightTheme ? myThemeNigth : myThemeLigth}>\r\n        <Paper className={classes.main}>\r\n          <Container /* component=\"main\" */ maxWidth=\"xs\">\r\n            <Grid item xs={6} className={classes.buttonsLog}>\r\n              <Button\r\n                className={classes.buttonNigthTheme}\r\n                onClick={handleNightTheme}\r\n              >\r\n                {nightTheme && <Brightness7Icon />}\r\n                {!nightTheme && <Brightness4Icon />}\r\n              </Button>\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"contained\"\r\n                className={classes.buttonLogIn}\r\n                onClick={handleClickOpenLogIn}\r\n              >\r\n                Log in\r\n              </Button>\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.buttonSignUp}\r\n                onClick={handleClickOpenSignUp}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n            </Grid>\r\n            <SignUpDialog\r\n              open={openSignUp}\r\n              onClose={handleClose}\r\n              handleClickOpenLogIn={handleClickOpenLogIn}\r\n            />\r\n            <LogInDialog\r\n              open={openLogIn}\r\n              onClose={handleClose}\r\n              handleClickOpenSignUp={handleClickOpenSignUp}\r\n            />\r\n          </Container>\r\n        </Paper>\r\n      </ThemeProvider>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nfunction SignUpDialog(props) {\r\n  //modal window on the form Sign up\r\n\r\n  const { onClose, selectedValue, open } = props;\r\n  const handleClose = () => {\r\n    onClose(selectedValue);\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"dialog_signUp\" open={open}>\r\n      <SignUp {...props} />\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nfunction LogInDialog(props) {\r\n  //modal window on the form Log in\r\n  const { onClose, selectedValue, open } = props;\r\n  const handleClose = () => {\r\n    onClose(selectedValue);\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"dialog_logIn\" open={open}>\r\n      <LogIn {...props} />\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./store/store\";\r\n\r\nlet rerender = () => {\r\n  ReactDOM.render(<App />, document.getElementById(\"root\"));\r\n};\r\n\r\nrerender();\r\n\r\nstore.subscribe(() => {\r\n  rerender();\r\n});"],"sourceRoot":""}