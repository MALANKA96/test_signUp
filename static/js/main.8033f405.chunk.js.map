{"version":3,"sources":["component/PasswordСomplexity.js","component/InputTextField.js","validators/validators.js","style/useStyle.js","component/SignUp.js","store/store.js","App.js","index.js"],"names":["PasswordСomplexity","strColor","strWidth","scoreСomplexityPassword","styleСomplexityPassword","backgroundColor","height","marginTop","width","transition","style","InputTextField","input","meta","props","hasError","touched","error","TextField","autoComplete","variant","fullWidth","required","helperText","validationLogin","values","errors","valueLogin","login","lengthValueLogin","length","objectValidationLogin","test","Object","entries","key","value","validationEmail","email","validationPassword","valuePassword","password","lengthValuePassword","objectValidationPassword","validationConfirmPassword","valueConfirmPassword","confirm_password","lengthValueConfirmPassword","objectValidationConfirmPassword","validate","useStyles","makeStyles","theme","paper","spacing","display","flexDirection","alignItems","form","submit","margin","buttonPass","minWidth","padding","weak","textAlign","strong","complexityPassword","SignUpReduxForm","reduxForm","handleSubmit","React","typeFieldPassword","setTypeFieldPassword","visibilityPassword","setVisibilityPassword","visibilityСomplexityPassword","setVisibilityСomplexityPassword","setScoreСomplexityPassword","validationForLowerLetters","validationForUpperLetters","validationForSpecialCharacter","validationForNumber","classes","Container","component","maxWidth","CssBaseline","className","Typography","noValidate","onSubmit","Grid","container","item","xs","Field","placeholder","name","id","label","title","type","sm","onChange","e","arrayValuePassword","target","split","isValidForLowerLetters","some","i","isValidForUpperLetters","isValidForSpecialCharacter","isValidForNumber","filter","Boolean","Button","color","onClick","justify","Link","href","SignUp","formData","console","log","reducers","combineReducers","formReducer","store","createStore","window","App","rerender","ReactDOM","render","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.8033f405.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst PasswordСomplexity = ({ scoreСomplexityPassword }) => {\r\n  let strColor;\r\n  let strWidth;\r\n\r\n  switch (scoreСomplexityPassword) {\r\n    case 1:\r\n      strColor = \"red\";\r\n      strWidth = \"25%\";\r\n      break;\r\n    case 2:\r\n      strColor = \"orange\";\r\n      strWidth = \"50%\";\r\n      break;\r\n    case 3:\r\n      strColor = \"yellow\";\r\n      strWidth = \"75%\";\r\n      break;\r\n    case 4:\r\n      strColor = \"#5cff47\";\r\n      strWidth = \"100%\";\r\n      break;\r\n    default:\r\n  }\r\n\r\n  const styleСomplexityPassword = {\r\n    backgroundColor: strColor,\r\n    height: \"5px\",\r\n    marginTop: \"10px\",\r\n    width: strWidth,\r\n    transition: \"all 300ms ease-in-out\",\r\n  };\r\n\r\n  return <div style={styleСomplexityPassword}> </div>;\r\n};\r\n\r\nexport default PasswordСomplexity;\r\n","import TextField from \"@material-ui/core/TextField\";\r\n\r\nconst InputTextField = ({ input, meta, ...props }) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n      <TextField\r\n        {...input}\r\n        {...props}\r\n        autoComplete=\"off\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        required\r\n        error={!!hasError}\r\n        helperText={hasError}\r\n      />\r\n    );\r\n  };\r\n  \r\n  export default InputTextField;","const validate = (values) => {\r\n  const errors = {};\r\n  validationLogin(values, errors);\r\n  validationEmail(values, errors);\r\n  validationPassword(values, errors);\r\n  validationConfirmPassword(values, errors);\r\n  return errors;\r\n};\r\n\r\nconst validationLogin = (values, errors) => {\r\n  let valueLogin = values.login;\r\n\r\n  if (!valueLogin) {\r\n    errors.login = \"create a login\";\r\n    return errors;\r\n  } else {\r\n    let lengthValueLogin = valueLogin.length;\r\n\r\n    const objectValidationLogin = {\r\n      [lengthValueLogin < 4]: \"login must be more than 4 characters\",\r\n      [lengthValueLogin > 15]: \"login must be 15 characters or less\",\r\n      [!/^[\\w]{0,}$/i.test(\r\n        valueLogin\r\n      )]: \"login should not contain spaces and other special characters. use: az, AZ, 0-9\",\r\n    };\r\n\r\n    for (const [key, value] of Object.entries(objectValidationLogin)) {\r\n      if (key === \"true\") {\r\n        return (errors.login = value);\r\n      }\r\n    }\r\n    return errors;\r\n  }\r\n};\r\nconst validationEmail = (values, errors) => {\r\n  if (!values.email) {\r\n    errors.email =\r\n      \"enter a valid email address to which a confirmation email will be sent\";\r\n  } else if (\r\n    !/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\r\n      values.email\r\n    )\r\n  ) {\r\n    errors.email = \"invalid email address\";\r\n  }\r\n  return errors;\r\n};\r\nconst validationPassword = (values, errors) => {\r\n  let valuePassword = values.password;\r\n\r\n  if (!valuePassword) {\r\n    errors.password = \"сreate a password\";\r\n    return errors;\r\n  } else {\r\n    let lengthValuePassword = valuePassword.length;\r\n    const objectValidationPassword = {\r\n      [/\\s/.test(valuePassword)]: \"don't use space\",\r\n      [/(?=.*[А-я])/.test(valuePassword)]: \"do not use letters ая, АЯ\",\r\n      [lengthValuePassword <\r\n      8]: \"password is short, minimum number of characters 8\",\r\n      [!/(?=.*[A-Z])/.test(\r\n        valuePassword\r\n      )]: \"at least one uppercase is required\",\r\n      [!/(?=.*[a-z])/.test(\r\n        valuePassword\r\n      )]: \"at least one lower case is required\",\r\n      [!/(?=.*[!@#$%^&*()_=+{}:<.>-])/.test(\r\n        valuePassword\r\n      )]: \"at least one special character is required ! @ # $ % ^ & * ( ) _ = + { } : < . > -\",\r\n      [!/(?=.*[0-9])/.test(valuePassword)]: \"at least one number is required\",\r\n    };\r\n\r\n    for (const [key, value] of Object.entries(objectValidationPassword)) {\r\n      if (key === \"true\") {\r\n        return (errors.password = value);\r\n      }\r\n    }\r\n    return errors;\r\n  }\r\n};\r\nconst validationConfirmPassword = (values, errors) => {\r\n  let valuePassword = values.password;\r\n  let valueConfirmPassword = values.confirm_password;\r\n\r\n  if (!valueConfirmPassword) {\r\n    errors.confirm_password = \"enter confirm password\";\r\n    return errors;\r\n  } else {\r\n    let lengthValueConfirmPassword = valueConfirmPassword.length;\r\n    const objectValidationConfirmPassword = {\r\n      [valueConfirmPassword &&\r\n      valueConfirmPassword !==\r\n        valuePassword]: \"password confirmation doesn't match\",\r\n      [lengthValueConfirmPassword < 1]: \"password confirmation doesn't match\",\r\n    };\r\n\r\n    for (const [key, value] of Object.entries(\r\n      objectValidationConfirmPassword\r\n    )) {\r\n      if (key === \"true\") {\r\n        return (errors.confirm_password = value);\r\n      }\r\n    }\r\n    return errors;\r\n  }\r\n};\r\n\r\nexport default validate;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  buttonPass: {\r\n    height: \"56px\",\r\n    margin: \"0\",\r\n    minWidth: \"42px\",\r\n    padding: \"0\",\r\n    width: \"100%\",\r\n  },\r\n  weak: {\r\n    textAlign: \"center\",\r\n  },\r\n  strong: {\r\n    textAlign: \"center\",\r\n  },\r\n  complexityPassword: {\r\n    display: \"flex\",\r\n  },\r\n}));\r\n\r\n\r\nexport default useStyles;\r\n\r\n","import * as React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\n\r\nimport PasswordСomplexity from \"./PasswordСomplexity\";\r\nimport InputTextField from \"./InputTextField\";\r\nimport validate from \"../validators/validators\";\r\nimport useStyles from \"../style/useStyle\";\r\n\r\nconst SignUpForm = ({ handleSubmit }) => {\r\n  const [typeFieldPassword, setTypeFieldPassword] = React.useState(\"password\");\r\n  const [visibilityPassword, setVisibilityPassword] = React.useState(false);\r\n  const [\r\n    visibilityСomplexityPassword,\r\n    setVisibilityСomplexityPassword,\r\n  ] = React.useState(false);\r\n  let [scoreСomplexityPassword, setScoreСomplexityPassword] = React.useState(0);\r\n\r\n  const validationForLowerLetters = /(?=.*[a-z])/;\r\n  const validationForUpperLetters = /(?=.*[A-Z])/;\r\n  const validationForSpecialCharacter = /(?=.*[!@#$%^&*()_=+{}:<.>-])/;\r\n  const validationForNumber = /(?=.*[0-9])/;\r\n\r\n  const onPasswordСomplexity = (e) => {\r\n    setVisibilityСomplexityPassword(true);\r\n    let arrayValuePassword = e.target.value.split(\"\");\r\n\r\n    let isValidForLowerLetters = arrayValuePassword.some((i) => {\r\n      return validationForLowerLetters.test(i);\r\n    });\r\n    let isValidForUpperLetters = arrayValuePassword.some((i) => {\r\n      return validationForUpperLetters.test(i);\r\n    });\r\n    let isValidForSpecialCharacter = arrayValuePassword.some((i) => {\r\n      return validationForSpecialCharacter.test(i);\r\n    });\r\n    let isValidForNumber = arrayValuePassword.some((i) => {\r\n      return validationForNumber.test(i);\r\n    });\r\n\r\n    setScoreСomplexityPassword(\r\n      [isValidForLowerLetters, isValidForUpperLetters, isValidForSpecialCharacter, isValidForNumber].filter(Boolean).length\r\n    );\r\n\r\n    if (e.target.value === \"\") {\r\n      setScoreСomplexityPassword(0);\r\n      setVisibilityСomplexityPassword(false);\r\n    }\r\n  };\r\n\r\n  const VisibilityPassword = () => {\r\n    if (typeFieldPassword === \"password\") {\r\n      setTypeFieldPassword(\"text\");\r\n      setVisibilityPassword(true);\r\n    } else {\r\n      setTypeFieldPassword(\"password\");\r\n      setVisibilityPassword(false);\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12}>\r\n              <Field\r\n                placeholder={\"login\"}\r\n                name={\"login\"}\r\n                id={\"login\"}\r\n                label={\"login\"}\r\n                component={InputTextField}\r\n                title=\"enter your login\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Field\r\n                placeholder={\"email\"}\r\n                name={\"email\"}\r\n                id={\"email\"}\r\n                label={\"email\"}\r\n                component={InputTextField}\r\n                type={\"email\"}\r\n                title={\"enter your email\"}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={10} sm={10}>\r\n              <Field\r\n                placeholder={\"password\"}\r\n                name={\"password\"}\r\n                id={\"password\"}\r\n                label={\"password\"}\r\n                component={InputTextField}\r\n                type={typeFieldPassword}\r\n                title={\"enter a strong password\"}\r\n                onChange={onPasswordСomplexity}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={2} sm={2}>\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.buttonPass}\r\n                onClick={VisibilityPassword}\r\n              >\r\n                {visibilityPassword && <VisibilityIcon />}\r\n                {!visibilityPassword && <VisibilityOffIcon />}\r\n              </Button>\r\n            </Grid>\r\n            {visibilityСomplexityPassword && (\r\n              <Grid item xs={12} className={classes.complexityPassword}>\r\n                <Grid item xs={2} className={classes.weak}>\r\n                  weak\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                  <PasswordСomplexity\r\n                    scoreСomplexityPassword={scoreСomplexityPassword}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={2} className={classes.strong}>\r\n                  strong\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n\r\n            <Grid item xs={12}>\r\n              <Field\r\n                placeholder={\"confirm password\"}\r\n                name={\"confirm_password\"}\r\n                id={\"confirm_password\"}\r\n                label={\"confirm password\"}\r\n                component={InputTextField}\r\n                type={typeFieldPassword}\r\n                title={\"confirm password\"}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst SignUp = () => {\r\n  const onSubmit = (formData) => {\r\n    console.log(formData);\r\n  };\r\n  return (\r\n    <>\r\n      <SignUpReduxForm onSubmit={onSubmit} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst SignUpReduxForm = reduxForm({\r\n  form: \"singUp\",\r\n  validate,\r\n})(SignUpForm);\r\n\r\nexport default SignUp;\r\n","import {combineReducers, createStore } from \"redux\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\n\r\nlet reducers = combineReducers({\r\n    form: formReducer,\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\n\r\nwindow.store = store;\r\nexport default store;\r\n","import * as React from \"react\";\r\nimport SignUp from \"./component/SignUp\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/store\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <SignUp />\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./store/store\";\r\n\r\nlet rerender = () => {\r\n  ReactDOM.render(<App />, document.getElementById(\"root\"));\r\n};\r\n\r\nrerender();\r\n\r\nstore.subscribe(() => {\r\n  rerender();\r\n});"],"sourceRoot":""}